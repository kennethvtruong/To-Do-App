{"version":3,"sources":["components/Task.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["Task","tasks","index","completeTask","removeTask","count","setCount","className","style","textDecoration","isCompleted","text","onClick","TaskForm","addTask","React","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","setTasks","Date","date","newTasks","splice","toLocaleDateString","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAgBgBA,MAdhB,YAA4E,IAA5DC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC3D,OACE,sBACEC,UAAU,QACVC,MAAO,CAAEC,eAAgBR,EAAMS,YAAc,eAAgB,IAF/D,UAGKT,EAAMU,KACP,gCACE,wBAAQC,QAAS,WAAOT,EAAaD,GAAOI,EAASD,EAAM,IAA3D,sBACA,wBAAQO,QAAS,kBAAMR,EAAWF,IAAlC,2BCcKW,MAtBjB,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACDC,IAAMC,SAAS,IADd,mBACpBC,EADoB,KACbC,EADa,KAU3B,OACE,sBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACEJ,IACJH,EAAQG,GACRC,EAAS,MAIT,SACE,uBACEI,KAAK,OACLf,UAAU,QACVU,MAAOA,EACPM,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOP,aCuC5BQ,MApDf,WAAgB,IAAD,EACaV,IAAMC,SAAS,CACvC,CAACL,KAAM,mBACPD,aAAa,KAHF,mBACNT,EADM,KACCyB,EADD,OAOaX,IAAMC,SAAS,GAP5B,mBAONX,EAPM,KAOCC,EAPD,OASWS,IAAMC,SAAS,IAAIW,MAT9B,mBASNC,EATM,KAgBPzB,GAhBO,KAgBQ,SAAAD,GACnB,IAAM2B,EAAQ,YAAO5B,GACrB4B,EAAS3B,GAAOQ,aAAc,EAC9BgB,EAASG,KAGLzB,EAAa,SAAAF,GACjB,IAAM2B,EAAQ,YAAO5B,GACrB4B,EAASC,OAAO5B,EAAO,GACvBwB,EAASG,IAKX,OACE,sBAAKtB,UAAU,MAAf,UACE,6BAAKqB,EAAKG,uBACV,mDAAsB1B,KACtB,sBAAKE,UAAU,YAAf,UACGN,EAAM+B,KAAI,SAAC/B,EAAOC,GAAR,OACT,cAAC,EAAD,CAEEA,MAAOA,EACPD,MAAOA,EACPE,aAAcA,EACdC,WAAYA,EACZC,MAAOA,EACPC,SAAUA,GANLJ,MAST,cAAC,EAAD,CAAUY,QAnCA,SAAAH,GACd,IAAMkB,EAAQ,sBAAO5B,GAAP,CAAc,CAAEU,UAC9Be,EAASG,aCNEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4b6bd3b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Task({ tasks, index, completeTask, removeTask, count, setCount }) {\r\n    return (\r\n      <div \r\n        className=\"tasks\"\r\n        style={{ textDecoration: tasks.isCompleted ? \"line-through\": \"\"}}>\r\n          {tasks.text} \r\n          <div>\r\n            <button onClick={() => {completeTask(index);setCount(count+1)}}>Complete</button>\r\n            <button onClick={() => removeTask(index)}>Delete</button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n export default Task;","import React from 'react';\r\n\r\nfunction TaskForm({ addTask }) {\r\n    const [value, setValue] = React.useState(\"\");\r\n  \r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if(!value) return;\r\n      addTask(value);\r\n      setValue(\"\")\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n          />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default TaskForm;","import './App.css';\nimport React from 'react';\nimport Task from './components/Task.js'\nimport TaskForm from './components/TaskForm.js'\n\nfunction App() {\n  const [tasks, setTasks] = React.useState([\n    {text: \"Start To-Do List\",\n    isCompleted: false,\n    }\n  ]);\n\n  const [count, setCount] = React.useState(0)\n\n  const [date, setDate] = React.useState(new Date());\n\n  const addTask = text => {\n    const newTasks = [...tasks, { text }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].isCompleted = true;\n    setTasks(newTasks)\n  };\n\n  const removeTask = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks)\n  }; \n\n\n\n  return (\n    <div className=\"app\">\n      <h2>{date.toLocaleDateString()}</h2>\n      <h2>Tasks Completed: {count}</h2>\n      <div className=\"todo-list\">\n        {tasks.map((tasks, index) => (\n          <Task \n            key={index}\n            index={index}\n            tasks={tasks}\n            completeTask={completeTask}\n            removeTask={removeTask}\n            count={count}\n            setCount={setCount}\n            />\n        ))}\n        <TaskForm addTask={addTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}