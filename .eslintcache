[{"C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\index.js":"1","C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\App.js":"2","C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\reportWebVitals.js":"3","C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\components\\TaskForm.js":"4","C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\components\\Task.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1421,"mtime":1607982874656,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":526,"mtime":1607918299759,"results":"10","hashOfConfig":"7"},{"size":1643,"mtime":1607982874656,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"gmrjam",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\index.js",[],["24","25"],"C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\App.js",["26"],"import './App.css';\nimport React from 'react';\nimport { AnimateSharedLayout } from \"framer-motion\";\nimport Task from './components/Task.js'\nimport TaskForm from './components/TaskForm.js'\n\nfunction App() {\n  const [tasks, setTasks] = React.useState([\n    {text: \"Start To-Do List\",\n    isCompleted: false,\n    }\n  ]);\n\n  const [count, setCount] = React.useState(0)\n\n  const [date, setDate] = React.useState(new Date());\n\n  const addTask = text => {\n    const newTasks = [...tasks, { text }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].isCompleted = true;\n    setTasks(newTasks)\n  };\n\n  const removeTask = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks)\n  }; \n\n  \n  return (\n    <div className=\"app\">\n      <h2>{date.toLocaleDateString()}</h2>\n      <h2>Tasks Completed: {count}</h2>\n      <div className=\"todo-list\">\n      <AnimateSharedLayout type=\"crossfade\">\n        {tasks.map((tasks, index) => (\n          <Task \n            key={index}\n            index={index}\n            tasks={tasks}\n            completeTask={completeTask}\n            removeTask={removeTask}\n            count={count}\n            setCount={setCount}\n            />\n        ))}\n        <TaskForm \n          addTask={addTask} \n        />\n        </AnimateSharedLayout>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\reportWebVitals.js",[],"C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\components\\TaskForm.js",[],"C:\\Users\\khaiv\\Desktop\\Personal Projects\\ReactJS\\to-do-app\\src\\components\\Task.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":16,"column":16,"nodeType":"33","messageId":"34","endLine":16,"endColumn":23},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'setDate' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]